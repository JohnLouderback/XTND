/*! XTND 2015-02-19 */

!function(){var XTNDFactory=function(){var XTND=function(a){var b={namespacing:!0,alwaysPrefix:!0,addPrefixedForExisting:!0,logWarnings:!0};XTND._initialized=!0;var c=("undefined"!=typeof global?global:window,function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a});XTND.options=a?c(b,a):b,XTND.importMethods(XTND._importBuffer)};return XTND._initialized=!1,XTND._importBuffer={},XTND._getFunctions=function(a,b){for(var c in a)b(c,a[c])},XTND._capitaliseFirstLetter=function(a){return a.charAt(0).toUpperCase()+a.slice(1)},XTND.importMethods=function(methodsObject){for(var namespace in methodsObject)if(XTND._initialized){var methodsObject=methodsObject[namespace];for(var type in methodsObject){var Extends=eval(type);if(XTND.options.namespacing===!0){var Ext=null;console.log("for type: "+type),Object.defineProperty(Extends.prototype,namespace,{value:function(a,b,c){return function(){return this.__xtndCurrentNamespace!==c&&(console.log("object: "+b+" - "+this.__xtndCurrentNamespace+" vs "+c),"undefined"!=typeof b.prototype.currentInjectMethods&&b.prototype.currentInjectMethods.forEach(function(a){delete b.prototype[a]}),b.prototype.__xtndCurrentInjectMethods=[],b.prototype.__xtndCurrentNamespace=c,XTND._getFunctions(methodsObject[a],function(a,c){console.log("defining: "+a),b.prototype.__xtndCurrentInjectMethods.push(a),Object.defineProperty(b.prototype,a,{value:c,writable:!0,configurable:!0,enumerable:!1})})),this}}(type,Extends,namespace),writable:!0,configurable:!0,enumerable:!1})}else XTND._getFunctions(methodsObject[type],function(methodName,method){if("undefined"==typeof Extends.prototype[methodName]&&XTND.options.alwaysPrefix===!1)with(globalScope)Object.defineProperty(Extends.prototype,methodName,{value:method,writable:!1,configurable:!0,enumerable:!1});else if(XTND.options.addPrefixedForExisting){var newMethodName=namespace+XTND._capitaliseFirstLetter(methodName);if(XTND.options.alwaysPrefix===!1&&XTND.options.logWarnings&&console.warn('Method "'+methodName+'" already exists in type '+type+'.\nTrying to add with prefix: "'+newMethodName+'"...'),"undefined"==typeof Extends.prototype[newMethodName])with(XTND.options.alwaysPrefix===!1&&XTND.options.logWarnings&&console.warn('Method "'+newMethodName+'" was added successfully instead of method "'+methodName+'" for type '+type+"."),globalScope)Object.defineProperty(Extends.prototype,newMethodName,{value:method,writable:!0,configurable:!0,enumerable:!1});else XTND.options.logWarnings&&console.warn('Both methods "'+newMethodName+'" and "'+methodName+'" already exist in type '+type+".\nMethod was not added.")}});console.log(Extends.prototype)}}else XTND._importBuffer[namespace]=methodsObject[namespace]},XTND};"undefined"!=typeof module&&module.exports?module.exports=XTNDFactory():window.XTND=XTNDFactory()}();
//# sourceMappingURL=XTND.min.js.map